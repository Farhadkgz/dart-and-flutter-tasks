//Десять переменных строк
String a = 'first string';
String b = 'second string';
String c = 'third string';
String d = 'fourth string';
String e = 'fifth string';
String f = 'sixth string';
String g = 'seventh string';
String h = 'eighth string';
String i = 'ninth string';
String j = 'tenth string';

//Пять переменных чисел
int k = 0;
int l = 1;
int m = 2;
int n = 3;
int o = 4;

//Пять переменных чисел с плавающей точкой
double p = 0.1;
double q = 1.2;
double r = 2.1;
double s = 3.2;
double t = 5.1;

//Два переменных булево значения
bool u = true;
bool v = false;

void main(){
  print('Десять переменных строк:');
  print(a);
  print(b);
  print(c);
  print(d);
  print(e);
  print(f);
  print(g);
  print(h);
  print(i);
  print(j);

  print('Пять переменных чисел:');
  print(k);
  print(l);
  print(m);
  print(n);
  print(o);
  
  print('Пять переменных чисел с плавающей точкой:');
  print(p);
  print(q);
  print(r);
  print(s);
  print(t);
  
  print('Два переменных булево значения:');
  print(u);
  print(v);
}

//------------------------------------------------------------------------------

/*
Вопрос: Как работает поток в дарт?
  
Ответ: 
Поток проверяет с начала глобальную зону, зетем по очередности проверяет
все остальные зоны.
Внутри зоны нельзя объявлять переменную ниже и затем ее вызывать выше,
нарушается очередность.

  myFunc(){
  print(a);
  int a = 0;
  } - ТАК НЕЛЬЗЯ ПИСАТЬ!
 
 -------------------------------------------------------------------------------

Вопрос: Зона видимости в Dart разделяется на какие части?

 
Ответ: 
Зона видимости в Dart разделяется на:
1. Глобальную. Это видимость,
которая доступна во всем коде программы.
 
2. Внутренняя видимость класса. 
Объявления доступны только внутри определенного класса.
 
3. Блочная видимость.
Это часть видимости такие как, if-else, циклы, функции.
 
4. Видимость параметров. 
Видны только внутри метода или функции к которой они относятся.
 
5. Локальная видимость.

-------------------------------------------------------------------------------

Вопрос: Как сделать пояснение к коду? (Коментарий к коду)


Ответ: 
Существует два типа комментарев в Dart. 
Однострочные и многострочные комментарии.

Однострочные комментарии начинаются с двойного слеша //
Пример: //Lorem Ipsum is simply dummy text of the printing and typesetting industry

Многострочные обворачиваются в /* */
Пример: /* It is a long established fact that a reader will be distracted by 
           the readable content of a page when looking at its layout.
         */

-------------------------------------------------------------------------------

 Вопрос: В чем минусы такого типа как dynamic?
 
 Ответ:
 1. Отсутсвие статической типизации. Тоест не обнорижится ошибки времени
 выполнения на этапе компеляции.
 
 2. Использование dynamic делает код менее понятным и может привести к проблемам
 с поведением программы.
 
 3. Ухудшается производительность
 
 4. Ошибки и сложности с отладкой.
 
 -------------------------------------------------------------------------------
 
 Вопрос: Чем отличается Const от Final?
 
 Ответ: 
 В кратце обе схожи, то и то объявляет переменную единижды, тоесть
 в дальнейшем нельзя уже присвоить к этой переменной новое значение или строку.
 Но есть небольшая разница, Const в отличии от Final высчитывается на машине
 разработчика на уровне архива программ, а Final инициализируется во время запуска
 программы.
 
 
 -------------------------------------------------------------------------------
 
 Вопрос: Что такое Null.
 
 Ответ: 
 Null это константа, которая говрит, что у переменной отсутсвует значение.
 Иногда Null необходимо использовать, чтобы переменная не имела никакого значения.
 Но нужно учитывать, что на языке Dart есть защита Null safety.
 Чтобы при компиляции не возникала ошибка нужно правильно указать Null.
 Например: 
 
 Прввильно:    String? surname;
 Неправильно:  String  surname;  в этом случае сработает Null safety.
 
 Есть еще оператор ?? при присвоении переменной значений выполнит проверку на Null.
 
 Вот короткий примерчик:
 
 value1 ?? value2
 Если значение value1 не равно Null, то оператор возвратит именно это значение,
 иначе оператор ?? возвратит значение value2.
 
 -------------------------------------------------------------------------------
 
 Вопрос: Можно ли делать вложенность виджетов до бесконечности?
 
 Ответ:
 Да можно, хоть до усрачки :D .Можно как матрешку складывать друг на друга.
 Но из минусов теряется понимания кода и производительность приложения.
 
 -------------------------------------------------------------------------------
 
 Задание 11, 12, 13: Установить Flutter, создать Example приложение и запустить,
 перевести все строки из Английского на Русский.
 
 Ответ:
 Выполнено!
 
 -------------------------------------------------------------------------------
 
 Вопрос: Что такое виджет?
 
 Ответ:
 Виджет это элемент пользовательского интерфейса (UI), которая отоброжается
 на экране в приложений. Делятся на два типа на статические и динамические.
 
 Вот несколько примеров виджетов:
 Текстовое поле (Text), кнопка (Button), изоброжение (image).
 
 Также можно создавать собственные виджеты.
 
 -------------------------------------------------------------------------------
 
 Вопрос: В структуре проекта Flutter, какая папка и файлы самые часто используемые?
 
 Ответ:
 1. Папка lib. Главная папка проекта.
 
 2. Файл main.dart. В этом файле находится функция mian(), которая запускает
 приложение. В этом же файле можно определить главный виджет.
 
 3. Папка assets. Используется для хранения медиа файлов.
 
 4. Файл pubspec.yaml. В этом файле описывается зависимости проекта и
 указываются все ресурсы из папки assets. В этом же файле можно настроить
 параметры проекта, такие как название и версия приложения.
 
 5. Папки android или ios. В каждом из них содержится код, соответсвуещей
 платформой.
 
 6. Папка test. Здесь можно выполнять авто проверку работоспособности приложения
 и обноружение ошибок.
 
 
 -------------------------------------------------------------------------------
 
 
*/

