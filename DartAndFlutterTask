Домашнее задание
    
    Dart
    
    1. Вопрос: Создайте упорядоченный список, где содержаться три элемента String.

       Ответ: List <String> a = ['Dart', 'Flutter', 'SDK'];

	      void main(){
              	print(a);
              }

------------------------------------------------------------------------------------- 

    2. Вопрос: Список Set соблюдает порядок своих элементов?
       
       Ответ: Cписок Set не соблюдает порядок своих элементов.

-------------------------------------------------------------------------------------

    3. Вопрос: Пришлите код, как вы бы получили второй элемент списка из пункта №1
    
       Ответ: В данном случае, a[1] будет возвращать элемент с индексом 1 в списке переменной a, то есть 'Flutter'.

	      List <String> a = ['Dart', 'Flutter', 'SDK'];

	      void main(){
              	print(a[1]);
              }

-------------------------------------------------------------------------------------

    4. Вопрос: Создайте список Map где внутри будут 5 элементов. Пусть это будет произвольный список по вашему усмотрению.

       Ответ: Map students = {
              	0: 'Asim',
  		1: 'Vsevolod',
  		2: 'Nastya',
  		3: 'Alexander',
  		4: 'Alex',
  		5: 'Faha'
	      };

-------------------------------------------------------------------------------------

    5. Вопрос: Если в Set добавить одинаковые элементы, будет ли ошибка?

       Ответ: В Set нельзя добавить одинаковые элементы. Вдруг если добавить, то это не вызовет
	      ошибку, Операция добавления будет проигнорирована. 	

-------------------------------------------------------------------------------------

    6. Вопрос: В списке Map, ключи могут повторяться?

       Ответ: Ключи должны быть уникальными, Если попытаюсь добавить элемент с уже существующим ключом,
              то новое значение перезапишет предыдущее.

-------------------------------------------------------------------------------------

    7. Вопрос: Как очистить список List? Напишите пример, можно просто текстом

       Ответ: List a = [21, 31, 41, 55];

              	void main(){
              	  a.clear();
              	  print(a);
              }

-------------------------------------------------------------------------------------

    8. Вопрос: Как открыть "контекстное меню" переменной списка?

       Ответ: Если я правильно понял этот вопрос. Список методов перемнной открывается после указания переменной и за ней точку.
              Вот пример: List a = [21, 31, 41, 55];

			  void main(){
                            a. << Тут после указания точки появляется контекстное меню с различными методами.
                            print(a);
                          } 

-------------------------------------------------------------------------------------

    9. Вопрос: Как проверить пустой ли список Map?

       Ответ: void main() {
  		Map<String, int> a = {};

  			if (a.isEmpty) {
    			print('В списке ничего нет');
  			} else {
    			print('В списке есть ключи и значения');
 	        }
		}

-------------------------------------------------------------------------------------

    10. Вопрос: Придумайте три примера, где бы нам пригодились списки в мобильном приложении?
        
        Ответ: Список зарегистрированных пользователей. Список товар или услуг в корзине, если это магазин или
               список пользователей с приватными привелигиями.

-------------------------------------------------------------------------------------

    11. Вопрос: Может ли Set содержать три элемента типа bool?

        Ответ: Да может, но при выводе будет только уникальные значения.
               поскольку Set уникален, в итоге остаются только уникальные элементы,
               и в данном случае это true и false.

-------------------------------------------------------------------------------------

    12. Вопрос: Может ли список содержать в себе другой список?
 
        Ответ: Да может :)

-------------------------------------------------------------------------------------

    13. Вопрос: Напишите код, который узнает, не пустой ли список Set

	Ответ: void main() {
  		   Set<String> setList = {};

  		   if (setList.isEmpty) {
    		   print('Пусто');
  		   } else {
    		   print('Тут что-то есть');
  		 }
		}

-------------------------------------------------------------------------------------

    14. Вопрос: Самостоятельно изучите "фиксированный список" из статьи https://metanit.com/dart/tutorial/5.1.php и напишите мне объяснение, что этот список может и где может пригодится

	Ответ: Фиксированный список полезен, когда необходимо иметь контроль над размером и структурой списка, 
               и когда требуется оптимизация памяти и производительности.

               Фиксированные списки пригодятся, когда вам необходимо сохранить определенное количество элементов
               и гарантировать их неизменность.

-------------------------------------------------------------------------------------

    15. Вопрос: В чем отличия if else от switch case? Расскажите своими словами

	Ответ: witch-case проверяет условие на конкретное значение и выполняет определынный блок кода.

	       А в случае if-else, условное выражение внутри if проверяется на истинность true. Если условие верно, то выполняется код, который находится внутри блока if. Если условие ложно, то выполняется код, написанный внутри блока else.

В обоих случаях, if-else и switch-case предоставляют возможность выбирать между различными вариантами кода на основе условий. Однако, switch-case шире используется, когда нужно проверить переменное выражение на конкретное значение и выполнить соответствующий блок кода, в то время как if-else лучше подходит для выполнения разных блоков кода в зависимости от более сложных логических условий.

-------------------------------------------------------------------------------------

    16. Вопрос: Какие основные операции сравнения вы узнали из занятия?
	
	Ответ: == равно?
	       != не равно?
               <  меньше?
               >  больше
               <= меньше или равно
               >= больше или равно
               && - И 
               || - Или

-------------------------------------------------------------------------------------

    17. Вопрос: Можно ли в условной конструкции сравнить строку с числом?
	
	Ответ: Нельзя напрямую сравнивать строку с числом, но можно преоброзовать в тип данных 
               используя методы int.parse() и double.parse()

-------------------------------------------------------------------------------------

    18. Вопрос: Что делает default внутри switch case?
    
        Ответ: default представляет блок кода, который выполняется, когда ни один из case не совпадает с выражением switch. 
               Этот блок является необязательным и может использоваться для предоставления действия по умолчанию, 
               если ни одно из других условий не выполнено.

    Flutter
    
    1. Учебное приложение - https://www.figma.com/file/ueiJDeRlgdKwP1JMpbK2dd/Альфа-6
-------------------------------------------------------------------------------------

    2. Вопрос: Сделайте верстку проекта до той степени как это было сделано на занятии
	
       Ответ: Выполил :)

-------------------------------------------------------------------------------------


    3. Вопрос: Может ли виджет Text() содержать внутри себя еще один виджет Text()?

       Ответ: Не может содержать внутри себя другой виджет Text().

-------------------------------------------------------------------------------------

    4. Вопрос: Column и Row, в чем их различия?
        
      Ответ: Column() используется для вертикального расположения виджетов
             Row() используется для горизонтального расположения виджетов

-------------------------------------------------------------------------------------


    5. Вопрос: За что отвечает MaterialApp?

       Ответ: MaterialApp - виджет, которая является одной из основных точек входа приложения Flutter.
               MaterialApp позволяет задать глобальную тему.
                Можно определить и настроить маршруты (routes).
                 Отвечает за поддержку локализации.
                  Предоставляет по умолчанию навигационную панель.
                   Обработка ошибок.

              В целом, MaterialApp облегчает создание и настройку базового макета и поведения вашего приложения Flutter.      
              
-------------------------------------------------------------------------------------

    6. Вопрос: За что отвечает Scaffold?

       Ответ: Позволяет создавать базовый структурный макет для вашего приложения.
               предоставляет удобные методы для добавления различных элементов пользовательского интерфейса.

-------------------------------------------------------------------------------------

    7. Вопрос: Зачем нужен SafeArea?
        
       Ответ: SafeArea оборачивает ваше содержимое и автоматически распознает области, 
              которые должны быть безопасными для размещения пользовательского интерфейса.

              Виджет SafeArea, гарантирует, что содержимое вашего приложения не будет залезать под область, 
              занятую системными элементами, такими как панель состояния (status bar)
              или нижняя панель навигации (navigation bar) на устройствах

-------------------------------------------------------------------------------------

    8. Вопрос: Нужно ли запоминать каждый параметр каждого виджета?

       Ответ: Только базовые, часто используемые. А все остальное с опытом запомнится. 
              Неизвестные параметры можно загуглить в ходе работы во flutter.

      
-------------------------------------------------------------------------------------

    9. Вопрос: Определите что вы будете делать в качестве своего приложения и пришлите краткое описание проекта. Важно, чтоб сейчас вы его начинали разрабатывать но только “верстку”, логику позднее.

      Ответ: Мой близкий знакомый решил открыть свою собственную кафешку и фастфудную, 
             и в моих планах помочь ему запустить мобильное приложение в appStore и в Google play, 
             через которое можно будет заказывать еду на вынос.
             
             Думаю в приложений должно быть админ панелька, которая позволит ему самостоятельно управлять содержанием и меню.

-------------------------------------------------------------------------------------
             
             
             
             

